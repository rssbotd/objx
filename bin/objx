#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=R0903,R0912,C0413


"locate"


import os
import sys
import time


sys.path.insert(0, os.getcwd())


from objx.cmds    import Commands, Event, command
from objx.default import Default
from objx.object  import Object, fmt, keys
from objx.persist import Persist, find, long, skel, sync, types
from objx.utility import fntime, laps


class Config(Default):

    pass


Cfg         = Config()
Cfg.name    = Object.__module__.rsplit(".", maxsplit=1)[-2]
Cfg.wdr     = os.path.expanduser(f"~/.{Cfg.name}")
Cfg.pidfile = os.path.join(Cfg.wdr, f"{Cfg.name}.pid")


Persist.workdir = Cfg.wdr


def cmd(event):
    "list commands."
    event.reply(",".join(sorted(keys(Commands.cmds))))


def fnd(event):
    "locate objects."
    skel()
    if not event.rest:
        res = sorted([x.split('.')[-1].lower() for x in types()])
        if res:
            event.reply(",".join(res))
        return
    otype = long(event.args[0])
    nmr = 0
    for fnm, obj in find(otype, event.gets):
        event.reply(f"{nmr} {fmt(obj)} {laps(time.time()-fntime(fnm))}")
        nmr += 1
    if not nmr:
        event.reply("no result")


class Log(Object):

    "Log"

    def __init__(self):
        super().__init__()
        self.txt = ''


def log(event):
    "log text."
    if not event.rest:
        nmr = 0
        for fnm, obj in find('log'):
            lap = laps(time.time() - fntime(fnm))
            event.reply(f'{nmr} {obj.txt} {lap}')
            nmr += 1
        if not nmr:
            event.reply('no log')
        return
    obj = Log()
    obj.txt = event.rest
    sync(obj)
    event.reply('ok')


if __name__ == "__main__":
    Commands.add(cmd)
    Commands.add(fnd)
    Commands.add(log)
    result = Event()
    result.txt = " ".join(sys.argv[1:])
    command(result)
    for line in result.result:
        print(line)
